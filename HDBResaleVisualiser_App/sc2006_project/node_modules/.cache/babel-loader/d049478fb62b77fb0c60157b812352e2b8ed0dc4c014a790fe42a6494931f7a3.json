{"ast":null,"code":"var _jsxFileName = \"D:\\\\SC2006\\\\sc2006_project (3)\\\\sc2006_project\\\\src\\\\login\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginModal({\n  isLoginOpen,\n  setIsLoginOpen\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error message state\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async () => {\n    if (username && password) {\n      try {\n        const response = await fetch(\"http://localhost:8000/login/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          alert(`Welcome, ${username}! You are now logged in.`);\n          setIsLoginOpen(false);\n          // Optionally store token or user info in localStorage or context\n          localStorage.setItem(\"user\", JSON.stringify(data)); // Save user data\n          navigate(\"/\"); // Redirect to home page after successful login\n        } else {\n          const errorData = await response.json();\n          setErrorMessage(errorData.detail || \"Invalid credentials.\");\n        }\n      } catch (error) {\n        setErrorMessage(\"An error occurred. Please try again.\");\n      }\n    } else {\n      alert(\"Please enter both username and password.\");\n    }\n  };\n\n  // Function to handle navigation to the signup page\n  const handleSignupClick = () => {\n    setIsLoginOpen(false); // Close login modal\n    navigate(\"/signup\"); // Navigate to signup page\n  };\n  if (!isLoginOpen) return null; // Don't render if modal is closed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"w-full p-3 border border-gray-300 rounded mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-3 border border-gray-300 rounded mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-center mb-3\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-600 hover:underline\",\n          onClick: handleSignupClick // Use the new function\n          ,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLoginOpen(false) // Close modal when clicking\n          ,\n          className: \"text-gray-600 hover:underline\",\n          children: \"Continue as Guest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/forgot-password\",\n          className: \"text-red-600 hover:underline\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginModal, \"OcEh96ookApaGYrUhZcJPgbvkKE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","LoginModal","isLoginOpen","setIsLoginOpen","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","localStorage","setItem","errorData","detail","error","handleSignupClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["D:/SC2006/sc2006_project (3)/sc2006_project/src/login/LoginModal.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\n\nexport default function LoginModal({ isLoginOpen, setIsLoginOpen }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\"); // Error message state\n    const navigate = useNavigate(); // Initialize useNavigate\n\n    const handleLogin = async () => {\n        if (username && password) {\n            try {\n                const response = await fetch(\"http://localhost:8000/login/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ username, password }),\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    alert(`Welcome, ${username}! You are now logged in.`);\n                    setIsLoginOpen(false);\n                    // Optionally store token or user info in localStorage or context\n                    localStorage.setItem(\"user\", JSON.stringify(data)); // Save user data\n                    navigate(\"/\"); // Redirect to home page after successful login\n                } else {\n                    const errorData = await response.json();\n                    setErrorMessage(errorData.detail || \"Invalid credentials.\");\n                }\n            } catch (error) {\n                setErrorMessage(\"An error occurred. Please try again.\");\n            }\n        } else {\n            alert(\"Please enter both username and password.\");\n        }\n    };\n\n    // Function to handle navigation to the signup page\n    const handleSignupClick = () => {\n        setIsLoginOpen(false); // Close login modal\n        navigate(\"/signup\"); // Navigate to signup page\n    };\n\n    if (!isLoginOpen) return null; // Don't render if modal is closed\n\n    return (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n                <h2 className=\"text-2xl font-bold mb-4 text-center\">Login</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded mb-3\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded mb-3\"\n                />\n                {errorMessage && (\n                    <p className=\"text-red-600 text-center mb-3\">{errorMessage}</p>\n                )}\n                <button\n                    onClick={handleLogin}\n                    className=\"w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700\"\n                >\n                    Login\n                </button>\n\n                <div className=\"flex justify-between mt-4\">\n                    <button\n                        className=\"text-red-600 hover:underline\"\n                        onClick={handleSignupClick} // Use the new function\n                    >\n                        Sign Up\n                    </button>\n                    <button\n                        onClick={() => setIsLoginOpen(false)} // Close modal when clicking\n                        className=\"text-gray-600 hover:underline\"\n                    >\n                        Continue as Guest\n                    </button>\n                </div>\n\n                {/* Forgot Password Link */}\n                <p className=\"mt-3 text-center\">\n                    <a href=\"/forgot-password\" className=\"text-red-600 hover:underline\">\n                        Forgot Password?\n                    </a>\n                </p>\n            </div>\n        </div>\n    );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}