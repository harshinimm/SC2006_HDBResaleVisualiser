{"ast":null,"code":"// LoginModal.js\nimport{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginModal(_ref){let{isLoginOpen,setIsLoginOpen}=_ref;const[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");const navigate=useNavigate();const handleLogin=async()=>{if(username&&password){try{// Send POST request to backend with username and password\nconst response=await axios.post(\"http://127.0.0.1:8000/api/login/\",{username,password});// Check if the response status is OK (200)\nif(response.status===200){alert(`Welcome, ${username}! You are now logged in.`);setIsLoginOpen(false);localStorage.setItem(\"token\",response.data.token);// Assuming the token is in response.data.token\nnavigate(\"/\");// Redirect to homepage after login\n}}catch(error){// Check if the error is a response error (e.g., invalid credentials)\nif(error.response&&error.response.status===400){setErrorMessage(\"Invalid credentials. Please try again.\");}else{// Handle any other errors (network issues, etc.)\nsetErrorMessage(\"An error occurred. Please try again later.\");}}}else{setErrorMessage(\"Please enter both username and password.\");}};const handleSignupClick=()=>{setIsLoginOpen(false);navigate(\"/signup\");// Navigate to signup page\n};if(!isLoginOpen)return null;// Don't render if modal is closed\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-lg w-96\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4 text-center\",children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value),className:\"w-full p-3 border border-gray-300 rounded mb-3\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),className:\"w-full p-3 border border-gray-300 rounded mb-3\"}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 text-center mb-3\",children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,className:\"w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mt-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"text-red-600 hover:underline\",onClick:handleSignupClick,children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsLoginOpen(false)// close modal when clicking\n,className:\"text-gray-600 hover:underline\",children:\"Continue as Guest\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-3 text-center\",children:/*#__PURE__*/_jsx(\"a\",{href:\"/forgot-password\",className:\"text-red-600 hover:underline\",children:\"Forgot Password?\"})})]})});}","map":{"version":3,"names":["useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","LoginModal","_ref","isLoginOpen","setIsLoginOpen","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","response","post","status","alert","localStorage","setItem","data","token","error","handleSignupClick","className","children","type","placeholder","value","onChange","e","target","onClick","href"],"sources":["D:/SC2006/sc2006_project (3)/sc2006_project/src/login/LoginModal.js"],"sourcesContent":["// LoginModal.js\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginModal({ isLoginOpen, setIsLoginOpen }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = async () => {\n        if (username && password) {\n            try {\n                // Send POST request to backend with username and password\n                const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n                    username,\n                    password,\n                });\n    \n                // Check if the response status is OK (200)\n                if (response.status === 200) {\n                    alert(`Welcome, ${username}! You are now logged in.`);\n                    setIsLoginOpen(false);\n                    localStorage.setItem(\"token\", response.data.token); // Assuming the token is in response.data.token\n                    navigate(\"/\"); // Redirect to homepage after login\n                }\n            } catch (error) {\n                // Check if the error is a response error (e.g., invalid credentials)\n                if (error.response && error.response.status === 400) {\n                    setErrorMessage(\"Invalid credentials. Please try again.\");\n                } else {\n                    // Handle any other errors (network issues, etc.)\n                    setErrorMessage(\"An error occurred. Please try again later.\");\n                }\n            }\n        } else {\n            setErrorMessage(\"Please enter both username and password.\");\n        }\n    };\n\n    const handleSignupClick = () => {\n        setIsLoginOpen(false);\n        navigate(\"/signup\"); // Navigate to signup page\n    };\n\n    if (!isLoginOpen) return null; // Don't render if modal is closed\n\n    return (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n                <h2 className=\"text-2xl font-bold mb-4 text-center\">Login</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded mb-3\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded mb-3\"\n                />\n                {errorMessage && (\n                    <p className=\"text-red-600 text-center mb-3\">{errorMessage}</p>\n                )}\n                <button\n                    onClick={handleLogin}\n                    className=\"w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700\"\n                >\n                    Login\n                </button>\n\n                <div className=\"flex justify-between mt-4\">\n                    <button\n                        className=\"text-red-600 hover:underline\"\n                        onClick={handleSignupClick}\n                    >\n                        Sign Up\n                    </button>\n                    <button\n                        onClick={() => setIsLoginOpen(false)} // close modal when clicking\n                        className=\"text-gray-600 hover:underline\"\n                    >\n                        Continue as Guest\n                    </button>\n                </div>\n\n                <p className=\"mt-3 text-center\">\n                    <a href=\"/forgot-password\" className=\"text-red-600 hover:underline\">\n                        Forgot Password?\n                    </a>\n                </p>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}