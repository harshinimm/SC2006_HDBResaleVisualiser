{"ast":null,"code":"var _jsxFileName = \"D:\\\\SC2006\\\\sc2006_project (3)\\\\sc2006_project\\\\src\\\\login\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // For displaying success/error messages\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent form refresh\n\n    const apiUrl = \"http://127.0.0.1:8000/api/forgot-password/\";\n    try {\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const contentType = response.headers.get(\"Content-Type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json(); // Parse JSON response\n\n        if (response.ok) {\n          window.alert(\"Link sent to your email to reset password\");\n          setEmail(\"\"); // Clear email input\n          setMessage(\"\"); // Clear message\n        } else {\n          setMessage(data.detail || \"An error occurred. Please try again.\");\n        }\n      } else {\n        // Response is not JSON (likely an HTML error page)\n        const errorText = await response.text();\n        console.error(\"Server error response:\", errorText);\n        setMessage(\"A server error occurred. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Forgot Password Error:\", error);\n      setMessage(\"Network error: Unable to connect to the server.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-center\",\n        children: \"Forgot Your Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 p-3 rounded ${message.startsWith(\"An error\") ? \"bg-red-100 text-red-700\" : \"bg-green-100 text-green-700\"}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Email Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            type: \"submit\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPassword, \"tgSpMP9vfF6GNBbNf9NcNEW5Oz0=\");\n_c = ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","apiUrl","response","fetch","method","headers","body","JSON","stringify","contentType","get","includes","data","json","ok","window","alert","detail","errorText","text","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/SC2006/sc2006_project (3)/sc2006_project/src/login/ForgotPassword.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function ForgotPassword() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\"); // For displaying success/error messages\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevent form refresh\r\n    \r\n        const apiUrl = \"http://127.0.0.1:8000/api/forgot-password/\";\r\n    \r\n        try {\r\n            const response = await fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email }),\r\n            });\r\n    \r\n            const contentType = response.headers.get(\"Content-Type\");\r\n    \r\n            if (contentType && contentType.includes(\"application/json\")) {\r\n                const data = await response.json(); // Parse JSON response\r\n    \r\n                if (response.ok) {\r\n                    window.alert(\"Link sent to your email to reset password\");\r\n                    setEmail(\"\"); // Clear email input\r\n                    setMessage(\"\"); // Clear message\r\n                } else {\r\n                    setMessage(data.detail || \"An error occurred. Please try again.\");\r\n                }\r\n            } else {\r\n                // Response is not JSON (likely an HTML error page)\r\n                const errorText = await response.text();\r\n                console.error(\"Server error response:\", errorText);\r\n                setMessage(\"A server error occurred. Please try again later.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Forgot Password Error:\", error);\r\n            setMessage(\"Network error: Unable to connect to the server.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n            <div className=\"bg-white p-8 rounded shadow-md w-96\">\r\n                <h2 className=\"text-2xl font-semibold mb-4 text-center\">Forgot Your Password?</h2>\r\n                {message && (\r\n                    <div\r\n                        className={`mb-4 p-3 rounded ${message.startsWith(\"An error\") ? \"bg-red-100 text-red-700\" : \"bg-green-100 text-green-700\"}`}\r\n                    >\r\n                        {message}\r\n                    </div>\r\n                )}\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Email Address:\r\n                        </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button\r\n                            className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Reset Password\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}