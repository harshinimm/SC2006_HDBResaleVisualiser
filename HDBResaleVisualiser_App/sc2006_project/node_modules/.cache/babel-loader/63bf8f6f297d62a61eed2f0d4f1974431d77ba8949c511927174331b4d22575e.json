{"ast":null,"code":"var _jsxFileName = \"D:\\\\SC2006\\\\SC2006_HDBResaleVisualiser\\\\HDBResaleVisualiser_App\\\\sc2006_project\\\\src\\\\homepage\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport LoginModal from \"../login/LoginModal\";\nimport SearchSection from \"./SearchSection\";\nimport FeaturesSection from \"./FeaturesSection\";\nimport TransactionsTable from \"./TransactionsTable\";\nimport axiosInstance from \"../utils/axiosInstance\"; // Use the Axios instance that handles token refresh\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n\n  // ✅ Check if user is already logged in when the component mounts\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      fetchUserProfile(); // ✅ Call fetchUserProfile correctly\n    }\n  }, []); // ✅ Run only once on mount\n\n  // ✅ Fetch the logged-in user's profile\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axiosInstance.get(\"user-profile/\");\n      const loggedInUsername = response.data.username;\n\n      // Store username in state and localStorage for persistence\n      setUsername(loggedInUsername);\n      localStorage.setItem(\"username\", loggedInUsername);\n      setIsLoggedIn(true); // ✅ Ensure user is marked as logged in\n    } catch (error) {\n      console.error(\"Error fetching user profile:\", error);\n      setIsLoggedIn(false); // ✅ Logout if fetching profile fails\n    }\n  };\n\n  // ✅ Handle Login and store user details\n  const handleLogin = async (user, pass) => {\n    try {\n      const response = await axiosInstance.post(\"login/\", {\n        username: user,\n        password: pass\n      });\n      if (response.status === 200) {\n        const {\n          access,\n          refresh\n        } = response.data;\n\n        // ✅ Store tokens BEFORE fetching profile\n        localStorage.setItem(\"access_token\", access);\n        localStorage.setItem(\"refresh_token\", refresh);\n        setIsLoggedIn(true);\n        setIsLoginOpen(false);\n\n        // ✅ Fetch user profile AFTER login\n        fetchUserProfile();\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  // ✅ Handle Logout (clear session)\n  const handleLogout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    localStorage.removeItem(\"username\");\n    setIsLoggedIn(false);\n    setUsername(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white text-red-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn,\n      username: username,\n      handleLogout: handleLogout,\n      handleLoginOpen: () => setIsLoginOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      isLoginOpen: isLoginOpen,\n      setIsLoginOpen: setIsLoginOpen,\n      handleLogin: handleLogin,\n      setIsLoggedIn: setIsLoggedIn,\n      setUsername: setUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchSection, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeaturesSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"eEG52rVu/V48Qag55CODZLag6UY=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useState","useEffect","Navbar","LoginModal","SearchSection","FeaturesSection","TransactionsTable","axiosInstance","jsxDEV","_jsxDEV","HomePage","_s","search","setSearch","isLoginOpen","setIsLoginOpen","isLoggedIn","setIsLoggedIn","username","setUsername","token","localStorage","getItem","fetchUserProfile","response","get","loggedInUsername","data","setItem","error","console","handleLogin","user","pass","post","password","status","access","refresh","handleLogout","removeItem","className","children","handleLoginOpen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SC2006/SC2006_HDBResaleVisualiser/HDBResaleVisualiser_App/sc2006_project/src/homepage/HomePage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport LoginModal from \"../login/LoginModal\";\nimport SearchSection from \"./SearchSection\";\nimport FeaturesSection from \"./FeaturesSection\";\nimport TransactionsTable from \"./TransactionsTable\";\nimport axiosInstance from \"../utils/axiosInstance\"; // Use the Axios instance that handles token refresh\n\nexport default function HomePage() {\n  const [search, setSearch] = useState(\"\");\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n\n  // ✅ Check if user is already logged in when the component mounts\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      fetchUserProfile(); // ✅ Call fetchUserProfile correctly\n    }\n  }, []); // ✅ Run only once on mount\n\n  // ✅ Fetch the logged-in user's profile\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axiosInstance.get(\"user-profile/\");\n      const loggedInUsername = response.data.username;\n\n      // Store username in state and localStorage for persistence\n      setUsername(loggedInUsername);\n      localStorage.setItem(\"username\", loggedInUsername);\n      setIsLoggedIn(true); // ✅ Ensure user is marked as logged in\n    } catch (error) {\n      console.error(\"Error fetching user profile:\", error);\n      setIsLoggedIn(false); // ✅ Logout if fetching profile fails\n    }\n  };\n\n  // ✅ Handle Login and store user details\n  const handleLogin = async (user, pass) => {\n    try {\n      const response = await axiosInstance.post(\"login/\", { username: user, password: pass });\n\n      if (response.status === 200) {\n        const { access, refresh } = response.data;\n\n        // ✅ Store tokens BEFORE fetching profile\n        localStorage.setItem(\"access_token\", access);\n        localStorage.setItem(\"refresh_token\", refresh);\n\n        setIsLoggedIn(true);\n        setIsLoginOpen(false);\n\n        // ✅ Fetch user profile AFTER login\n        fetchUserProfile();\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  // ✅ Handle Logout (clear session)\n  const handleLogout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    localStorage.removeItem(\"username\");\n\n    setIsLoggedIn(false);\n    setUsername(\"\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white text-red-900\">\n      <Navbar \n        isLoggedIn={isLoggedIn} \n        username={username} \n        handleLogout={handleLogout} \n        handleLoginOpen={() => setIsLoginOpen(true)} \n      />\n      <LoginModal \n        isLoginOpen={isLoginOpen} \n        setIsLoginOpen={setIsLoginOpen} \n        handleLogin={handleLogin} \n        setIsLoggedIn={setIsLoggedIn} \n        setUsername={setUsername} \n      />\n      <SearchSection search={search} setSearch={setSearch} />\n      <FeaturesSection />\n      <TransactionsTable />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}