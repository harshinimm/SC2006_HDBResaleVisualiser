{"ast":null,"code":"var _jsxFileName = \"D:\\\\SC2006\\\\sc2006_project (3)\\\\sc2006_project\\\\src\\\\login\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../utils/axiosInstance\"; // Ensure axiosInstance is used\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginModal({\n  isLoginOpen,\n  setIsLoginOpen,\n  setUsername,\n  setIsLoggedIn\n}) {\n  _s();\n  const [username, setUsernameInput] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    if (username && password) {\n      try {\n        const response = await axiosInstance.post(\"login/\", {\n          username,\n          password\n        });\n        if (response.status === 200) {\n          const {\n            access,\n            refresh\n          } = response.data;\n\n          // Store tokens in localStorage\n          localStorage.setItem(\"access_token\", access);\n          localStorage.setItem(\"refresh_token\", refresh);\n\n          // Fetch and store the user's profile\n          fetchUserProfile();\n          alert(`Welcome, ${username}! You are now logged in.`);\n          setIsLoginOpen(false);\n          setIsLoggedIn(true);\n          navigate(\"/\"); // Redirect to homepage after login\n        }\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 401) {\n            setErrorMessage(\"Invalid username or password. Please try again.\");\n          } else {\n            setErrorMessage(error.response.data.detail || \"An unexpected error occurred.\");\n          }\n        } else {\n          setErrorMessage(\"Network error. Please check your connection and try again.\");\n        }\n      }\n    } else {\n      setErrorMessage(\"Please enter both username and password.\");\n    }\n  };\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axiosInstance.get(\"user-profile/\");\n      const loggedInUsername = response.data.username;\n\n      // Store username in state and localStorage\n      setUsername(loggedInUsername);\n      localStorage.setItem(\"username\", loggedInUsername);\n    } catch (error) {\n      console.error(\"Error fetching user profile:\", error);\n    }\n  };\n  const handleSignupClick = () => {\n    setIsLoginOpen(false);\n    navigate(\"/signup\"); // Navigate to signup page\n  };\n  if (!isLoginOpen) return null; // Don't render if modal is closed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsernameInput(e.target.value),\n        className: \"w-full p-3 border border-gray-300 rounded mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-3 border border-gray-300 rounded mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-center mb-3\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-600 hover:underline\",\n          onClick: handleSignupClick,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLoginOpen(false) // close modal when clicking\n          ,\n          className: \"text-gray-600 hover:underline\",\n          children: \"Continue as Guest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/forgot-password\",\n          className: \"text-red-600 hover:underline\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginModal, \"/gEjeOalSXM/8EV6aStwAOU9eRs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["useState","useNavigate","axiosInstance","jsxDEV","_jsxDEV","LoginModal","isLoginOpen","setIsLoginOpen","setUsername","setIsLoggedIn","_s","username","setUsernameInput","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","response","post","status","access","refresh","data","localStorage","setItem","fetchUserProfile","alert","error","detail","get","loggedInUsername","console","handleSignupClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["D:/SC2006/sc2006_project (3)/sc2006_project/src/login/LoginModal.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../utils/axiosInstance\"; // Ensure axiosInstance is used\n\nexport default function LoginModal({ isLoginOpen, setIsLoginOpen, setUsername, setIsLoggedIn }) {\n    const [username, setUsernameInput] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = async () => {\n        if (username && password) {\n            try {\n                const response = await axiosInstance.post(\"login/\", {\n                    username,\n                    password,\n                });\n\n                if (response.status === 200) {\n                    const { access, refresh } = response.data;\n\n                    // Store tokens in localStorage\n                    localStorage.setItem(\"access_token\", access);\n                    localStorage.setItem(\"refresh_token\", refresh);\n\n                    // Fetch and store the user's profile\n                    fetchUserProfile();\n\n                    alert(`Welcome, ${username}! You are now logged in.`);\n                    setIsLoginOpen(false);\n                    setIsLoggedIn(true);\n                    navigate(\"/\"); // Redirect to homepage after login\n                }\n            } catch (error) {\n                if (error.response) {\n                    if (error.response.status === 401) {\n                        setErrorMessage(\"Invalid username or password. Please try again.\");\n                    } else {\n                        setErrorMessage(error.response.data.detail || \"An unexpected error occurred.\");\n                    }\n                } else {\n                    setErrorMessage(\"Network error. Please check your connection and try again.\");\n                }\n            }\n        } else {\n            setErrorMessage(\"Please enter both username and password.\");\n        }\n    };\n\n    const fetchUserProfile = async () => {\n        try {\n            const response = await axiosInstance.get(\"user-profile/\");\n            const loggedInUsername = response.data.username;\n            \n            // Store username in state and localStorage\n            setUsername(loggedInUsername);\n            localStorage.setItem(\"username\", loggedInUsername);\n        } catch (error) {\n            console.error(\"Error fetching user profile:\", error);\n        }\n    };\n\n    const handleSignupClick = () => {\n        setIsLoginOpen(false);\n        navigate(\"/signup\"); // Navigate to signup page\n    };\n\n    if (!isLoginOpen) return null; // Don't render if modal is closed\n\n    return (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n                <h2 className=\"text-2xl font-bold mb-4 text-center\">Login</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsernameInput(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded mb-3\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded mb-3\"\n                />\n                {errorMessage && (\n                    <p className=\"text-red-600 text-center mb-3\">{errorMessage}</p>\n                )}\n                <button\n                    onClick={handleLogin}\n                    className=\"w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700\"\n                >\n                    Login\n                </button>\n\n                <div className=\"flex justify-between mt-4\">\n                    <button\n                        className=\"text-red-600 hover:underline\"\n                        onClick={handleSignupClick}\n                    >\n                        Sign Up\n                    </button>\n                    <button\n                        onClick={() => setIsLoginOpen(false)} // close modal when clicking\n                        className=\"text-gray-600 hover:underline\"\n                    >\n                        Continue as Guest\n                    </button>\n                </div>\n\n                <p className=\"mt-3 text-center\">\n                    <a href=\"/forgot-password\" className=\"text-red-600 hover:underline\">\n                        Forgot Password?\n                    </a>\n                </p>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}