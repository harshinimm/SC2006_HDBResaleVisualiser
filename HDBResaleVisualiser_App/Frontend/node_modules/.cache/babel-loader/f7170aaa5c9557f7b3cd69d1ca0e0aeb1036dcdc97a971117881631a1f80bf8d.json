{"ast":null,"code":"import axios from\"axios\";const API_URL=\"http://127.0.0.1:8000/api/\";// ✅ Create an Axios instance\nconst axiosInstance=axios.create({baseURL:API_URL,headers:{\"Content-Type\":\"application/json\"}});// ✅ Function to get a valid access token\nexport const getAccessToken=async()=>{let accessToken=localStorage.getItem(\"access_token\");const refreshToken=localStorage.getItem(\"refresh_token\");if(!accessToken&&refreshToken){try{console.log(\"Refreshing access token...\");const response=await axios.post(`${API_URL}refresh/`,{refresh:refreshToken});// ✅ Store new access token\naccessToken=response.data.access;localStorage.setItem(\"access_token\",accessToken);}catch(error){console.error(\"Token refresh failed:\",error);localStorage.removeItem(\"access_token\");localStorage.removeItem(\"refresh_token\");}}return accessToken;};// ✅ Automatically add Authorization header if token is available\naxiosInstance.interceptors.request.use(async config=>{const token=await getAccessToken();// ✅ Ensure token is always fresh\nif(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});export default axiosInstance;","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","headers","getAccessToken","accessToken","localStorage","getItem","refreshToken","console","log","response","post","refresh","data","access","setItem","error","removeItem","interceptors","request","use","config","token","Authorization","Promise","reject"],"sources":["D:/SC2006/SC2006_HDBResaleVisualiser/HDBResaleVisualiser_App/sc2006_project/src/utils/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://127.0.0.1:8000/api/\";\r\n\r\n// ✅ Create an Axios instance\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\n// ✅ Function to get a valid access token\r\nexport const getAccessToken = async () => {\r\n    let accessToken = localStorage.getItem(\"access_token\");\r\n    const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n    if (!accessToken && refreshToken) {\r\n        try {\r\n            console.log(\"Refreshing access token...\");\r\n            const response = await axios.post(`${API_URL}refresh/`, { refresh: refreshToken });\r\n\r\n            // ✅ Store new access token\r\n            accessToken = response.data.access;\r\n            localStorage.setItem(\"access_token\", accessToken);\r\n        } catch (error) {\r\n            console.error(\"Token refresh failed:\", error);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n        }\r\n    }\r\n    return accessToken;\r\n};\r\n\r\n// ✅ Automatically add Authorization header if token is available\r\naxiosInstance.interceptors.request.use(\r\n    async (config) => {\r\n        const token = await getAccessToken();  // ✅ Ensure token is always fresh\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,4BAA4B,CAE5C;AACA,KAAM,CAAAC,aAAa,CAAGF,KAAK,CAACG,MAAM,CAAC,CAC/BC,OAAO,CAAEH,OAAO,CAChBI,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACtD,KAAM,CAAAC,YAAY,CAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAE1D,GAAI,CAACF,WAAW,EAAIG,YAAY,CAAE,CAC9B,GAAI,CACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,UAAU,CAAE,CAAEc,OAAO,CAAEL,YAAa,CAAC,CAAC,CAElF;AACAH,WAAW,CAAGM,QAAQ,CAACG,IAAI,CAACC,MAAM,CAClCT,YAAY,CAACU,OAAO,CAAC,cAAc,CAAEX,WAAW,CAAC,CACrD,CAAE,MAAOY,KAAK,CAAE,CACZR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CX,YAAY,CAACY,UAAU,CAAC,cAAc,CAAC,CACvCZ,YAAY,CAACY,UAAU,CAAC,eAAe,CAAC,CAC5C,CACJ,CACA,MAAO,CAAAb,WAAW,CACtB,CAAC,CAED;AACAL,aAAa,CAACmB,YAAY,CAACC,OAAO,CAACC,GAAG,CAClC,KAAO,CAAAC,MAAM,EAAK,CACd,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAnB,cAAc,CAAC,CAAC,CAAG;AACvC,GAAImB,KAAK,CAAE,CACPD,MAAM,CAACnB,OAAO,CAACqB,aAAa,CAAG,UAAUD,KAAK,EAAE,CACpD,CACA,MAAO,CAAAD,MAAM,CACjB,CAAC,CACAL,KAAK,EAAK,CACP,MAAO,CAAAQ,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC,CAChC,CACJ,CAAC,CAED,cAAe,CAAAjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}