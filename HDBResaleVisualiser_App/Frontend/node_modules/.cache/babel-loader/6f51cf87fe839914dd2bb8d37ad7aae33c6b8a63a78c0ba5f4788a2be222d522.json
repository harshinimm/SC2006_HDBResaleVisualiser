{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sc2006\\\\SC2006_HDBResaleVisualiser (2)\\\\SC2006_HDBResaleVisualiser\\\\HDBResaleVisualiser_App\\\\sc2006_project\\\\src\\\\pages\\\\HDBResaleVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport Navbar from \"../homepage/Navbar\";\nimport chartComponent from \"../utils/chartComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://127.0.0.1:8000/api/resale/\";\nexport default function HDBResaleVisualizer() {\n  _s();\n  const {\n    mode\n  } = useParams();\n  const location = useLocation();\n  const {\n    selectedDistricts = [],\n    selectedRoomType = \"\",\n    selectedDistrict = \"\",\n    selectedRoomTypes = []\n  } = location.state || {};\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasFetched, setHasFetched] = useState(false);\n  useEffect(() => {\n    if (!hasFetched) {\n      if (mode === \"multi\" && selectedDistricts.length && selectedRoomType) {\n        fetchMultiDistrictData();\n      } else if (mode === \"single\" && selectedDistrict && selectedRoomTypes.length) {\n        fetchSingleDistrictData();\n      }\n      setHasFetched(true);\n    }\n  }, [mode, selectedDistricts, selectedRoomType, selectedDistrict, selectedRoomTypes, hasFetched]);\n  const fetchMultiDistrictData = () => {\n    setLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    selectedDistricts.forEach(town => queryParams.append(\"towns\", town));\n    queryParams.append(\"room_type\", selectedRoomType);\n    queryParams.append(\"type\", \"price_trends\");\n    axios.get(`${API_URL}resale_analysis/?${queryParams.toString()}`).then(res => processChartData(res.data, selectedDistricts, \"town\")).catch(err => handleError(err)).finally(() => setLoading(false));\n  };\n  const fetchSingleDistrictData = () => {\n    setLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    queryParams.append(\"towns\", selectedDistrict);\n    queryParams.append(\"type\", \"price_trends\");\n    axios.get(`${API_URL}resale_analysis/?${queryParams.toString()}`).then(res => processChartData(res.data, selectedRoomTypes, \"flat_type\")).catch(err => handleError(err)).finally(() => setLoading(false));\n  };\n  const processChartData = (data, categories, key) => {\n    if (!data.length) {\n      setError(\"No data found for the selected criteria.\");\n      return;\n    }\n    const yKey = data[0].resale_price !== undefined ? \"resale_price\" : data[0].avg_price !== undefined ? \"avg_price\" : null;\n    if (!yKey) {\n      setError(\"Unexpected data format from server.\");\n      return;\n    }\n    const uniqueYears = [...new Set(data.map(d => Number(d.year)))].sort();\n    const datasets = categories.map(category => {\n      const filtered = data.filter(d => d[key].toUpperCase() === category.toUpperCase()).sort((a, b) => a.year - b.year);\n      return {\n        label: category,\n        data: uniqueYears.map(year => {\n          const match = filtered.find(d => Number(d.year) === year);\n          return match ? parseFloat(match[yKey]) : null;\n        }),\n        borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n        tension: 0.1,\n        fill: false\n      };\n    });\n    setChartData({\n      labels: uniqueYears,\n      datasets\n    });\n  };\n  const handleError = err => {\n    console.error(\"Fetch error:\", err);\n    setError(\"Failed to load data. Please try again.\");\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          font: {\n            size: 18,\n            weight: \"bold\"\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: mode === \"multi\" ? \"Compare Same Room Type in Multiple Districts\" : `Compare Multiple Room Types in ${selectedDistrict}`,\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Year\",\n          font: {\n            size: 16\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Resale Price (SGD)\",\n          font: {\n            size: 16\n          }\n        },\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white text-red-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mt-6\",\n      children: \"HDB Resale Price Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartOnlyComponent, {\n      chartData: chartData,\n      chartOptions: chartOptions,\n      loading: loading,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(HDBResaleVisualizer, \"reQAUh15NbE13FnJDTtY/ytqqsw=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = HDBResaleVisualizer;\nvar _c;\n$RefreshReg$(_c, \"HDBResaleVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useParams","Navbar","chartComponent","jsxDEV","_jsxDEV","API_URL","HDBResaleVisualizer","_s","mode","location","selectedDistricts","selectedRoomType","selectedDistrict","selectedRoomTypes","state","chartData","setChartData","loading","setLoading","error","setError","hasFetched","setHasFetched","length","fetchMultiDistrictData","fetchSingleDistrictData","queryParams","URLSearchParams","forEach","town","append","get","toString","then","res","processChartData","data","catch","err","handleError","finally","categories","key","yKey","resale_price","undefined","avg_price","uniqueYears","Set","map","d","Number","year","sort","datasets","category","filtered","filter","toUpperCase","a","b","label","match","find","parseFloat","borderColor","Math","floor","random","tension","fill","labels","console","chartOptions","responsive","plugins","legend","position","font","size","weight","title","display","text","scales","x","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ChartOnlyComponent","_c","$RefreshReg$"],"sources":["D:/Sc2006/SC2006_HDBResaleVisualiser (2)/SC2006_HDBResaleVisualiser/HDBResaleVisualiser_App/sc2006_project/src/pages/HDBResaleVisualiser.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport Navbar from \"../homepage/Navbar\";\r\nimport chartComponent from \"../utils/chartComponent\"; \r\n\r\n\r\nconst API_URL = \"http://127.0.0.1:8000/api/resale/\";\r\n\r\nexport default function HDBResaleVisualizer() {\r\n  const { mode } = useParams();\r\n  const location = useLocation();\r\n  const {\r\n    selectedDistricts = [],\r\n    selectedRoomType = \"\",\r\n    selectedDistrict = \"\",\r\n    selectedRoomTypes = [],\r\n  } = location.state || {};\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [hasFetched, setHasFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!hasFetched) {\r\n      if (mode === \"multi\" && selectedDistricts.length && selectedRoomType) {\r\n        fetchMultiDistrictData();\r\n      } else if (mode === \"single\" && selectedDistrict && selectedRoomTypes.length) {\r\n        fetchSingleDistrictData();\r\n      }\r\n      setHasFetched(true);\r\n    }\r\n  }, [mode, selectedDistricts, selectedRoomType, selectedDistrict, selectedRoomTypes, hasFetched]);\r\n\r\n  const fetchMultiDistrictData = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const queryParams = new URLSearchParams();\r\n    selectedDistricts.forEach((town) => queryParams.append(\"towns\", town));\r\n    queryParams.append(\"room_type\", selectedRoomType);\r\n    queryParams.append(\"type\", \"price_trends\");\r\n\r\n    axios\r\n      .get(`${API_URL}resale_analysis/?${queryParams.toString()}`)\r\n      .then((res) => processChartData(res.data, selectedDistricts, \"town\"))\r\n      .catch((err) => handleError(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const fetchSingleDistrictData = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const queryParams = new URLSearchParams();\r\n    queryParams.append(\"towns\", selectedDistrict);\r\n    queryParams.append(\"type\", \"price_trends\");\r\n\r\n    axios\r\n      .get(`${API_URL}resale_analysis/?${queryParams.toString()}`)\r\n      .then((res) => processChartData(res.data, selectedRoomTypes, \"flat_type\"))\r\n      .catch((err) => handleError(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const processChartData = (data, categories, key) => {\r\n    if (!data.length) {\r\n      setError(\"No data found for the selected criteria.\");\r\n      return;\r\n    }\r\n\r\n    const yKey = data[0].resale_price !== undefined\r\n      ? \"resale_price\"\r\n      : data[0].avg_price !== undefined\r\n      ? \"avg_price\"\r\n      : null;\r\n\r\n    if (!yKey) {\r\n      setError(\"Unexpected data format from server.\");\r\n      return;\r\n    }\r\n\r\n    const uniqueYears = [...new Set(data.map((d) => Number(d.year)))].sort();\r\n\r\n    const datasets = categories.map((category) => {\r\n      const filtered = data\r\n        .filter((d) => d[key].toUpperCase() === category.toUpperCase())\r\n        .sort((a, b) => a.year - b.year);\r\n\r\n      return {\r\n        label: category,\r\n        data: uniqueYears.map((year) => {\r\n          const match = filtered.find((d) => Number(d.year) === year);\r\n          return match ? parseFloat(match[yKey]) : null;\r\n        }),\r\n        borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n        tension: 0.1,\r\n        fill: false,\r\n      };\r\n    });\r\n\r\n    setChartData({ labels: uniqueYears, datasets });\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(\"Fetch error:\", err);\r\n    setError(\"Failed to load data. Please try again.\");\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n        labels: { font: { size: 18, weight: \"bold\" } },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text:\r\n          mode === \"multi\"\r\n            ? \"Compare Same Room Type in Multiple Districts\"\r\n            : `Compare Multiple Room Types in ${selectedDistrict}`,\r\n        font: { size: 16 },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Year\",\r\n          font: { size: 16 },\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Resale Price (SGD)\",\r\n          font: { size: 16 },\r\n        },\r\n        beginAtZero: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white text-red-900\">\r\n      <Navbar />\r\n      <h1 className=\"text-3xl font-bold text-center mt-6\">HDB Resale Price Visualizer</h1>\r\n      <ChartOnlyComponent\r\n        chartData={chartData}\r\n        chartOptions={chartOptions}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}