{"ast":null,"code":"var _jsxFileName = \"D:\\\\SC2006\\\\SC2006\\\\SC2006_HDBResaleVisualiser\\\\HDBResaleVisualiser_App\\\\sc2006_project\\\\src\\\\pages\\\\HDBResaleVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport Navbar from \"../homepage/Navbar\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst API_URL = \"http://127.0.0.1:8000/api/resale/\";\nexport default function HDBResaleVisualizer() {\n  _s();\n  const {\n    mode\n  } = useParams();\n  const location = useLocation();\n  const {\n    selectedDistricts = [],\n    selectedRoomType = \"\",\n    selectedDistrict = \"\",\n    selectedRoomTypes = []\n  } = location.state || {};\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasFetched, setHasFetched] = useState(false);\n  const [selectedDatasetIndex, setSelectedDatasetIndex] = useState(null);\n  useEffect(() => {\n    if (!hasFetched) {\n      if (mode === \"multi\" && selectedDistricts.length && selectedRoomType) {\n        fetchMultiDistrictData();\n      } else if (mode === \"single\" && selectedDistrict && selectedRoomTypes.length) {\n        fetchSingleDistrictData();\n      }\n      setHasFetched(true);\n    }\n  }, [mode, selectedDistricts, selectedRoomType, selectedDistrict, selectedRoomTypes, hasFetched]);\n  const formatRoomType = name => name.toUpperCase().replace(/-/g, \" \");\n  const fetchSingleDistrictData = () => {\n    setLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    queryParams.append(\"town\", selectedDistrict);\n    axios.get(`${API_URL}resale_roomtype_trends/?${queryParams.toString()}`).then(res => {\n      const formattedRoomTypes = selectedRoomTypes.map(formatRoomType);\n      processChartData(res.data, formattedRoomTypes, \"flat_type\");\n    }).catch(handleError).finally(() => setLoading(false));\n  };\n  const fetchMultiDistrictData = () => {\n    setLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    selectedDistricts.forEach(town => queryParams.append(\"towns\", town));\n    queryParams.append(\"room_type\", selectedRoomType);\n    queryParams.append(\"type\", \"price_trends\");\n    axios.get(`${API_URL}resale_analysis/?${queryParams.toString()}`).then(res => processChartData(res.data, selectedDistricts, \"town\")).catch(handleError).finally(() => setLoading(false));\n  };\n  const processChartData = (data, categories, key) => {\n    if (!data.length) {\n      setError(\"No data found for the selected criteria.\");\n      return;\n    }\n    const yKey = data[0].resale_price !== undefined ? \"resale_price\" : data[0].avg_price !== undefined ? \"avg_price\" : null;\n    if (!yKey) {\n      setError(\"Unexpected data format from server.\");\n      return;\n    }\n    const uniqueYears = [...new Set(data.map(d => Number(d.year)))].sort();\n    const datasets = categories.map(category => {\n      const filtered = data.filter(d => d[key].toUpperCase() === category.toUpperCase());\n      return {\n        label: category,\n        data: uniqueYears.map(year => {\n          const match = filtered.find(d => Number(d.year) === year);\n          return match && match[yKey] ? Number(match[yKey]) : null;\n        }),\n        rawData: filtered,\n        borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n        tension: 0.1,\n        fill: false\n      };\n    });\n    setChartData({\n      labels: uniqueYears,\n      datasets\n    });\n  };\n  const handleError = err => {\n    console.error(\"Fetch error:\", err);\n    setError(\"Failed to load data. Please try again.\");\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          font: {\n            size: 18,\n            weight: \"bold\"\n          }\n        },\n        onClick: (e, legendItem, legend) => {\n          setSelectedDatasetIndex(legendItem.datasetIndex);\n        }\n      },\n      title: {\n        display: true,\n        text: mode === \"multi\" ? `Compare ${sameRoomtpye} Room Type in Multiple Districts` : `Compare Multiple Room Types in ${selectedDistrict}`,\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Year\",\n          font: {\n            size: 16\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Resale Price (SGD)\",\n          font: {\n            size: 16\n          }\n        },\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white text-red-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mt-6\",\n      children: \"HDB Resale Price Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/4 mx-auto mt-3 p-4 bg-white rounded-lg shadow\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-500 mt-4\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }, this), chartData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), selectedDatasetIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-center mb-2\",\n            children: [\"\\uD83D\\uDCCB Data for: \", chartData.datasets[selectedDatasetIndex].label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border text-center border-gray-300 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-100\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"p-2 border\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"p-2 border\",\n                  children: \"Average Resale Price (SGD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: chartData.labels.map((year, idx) => {\n                const price = chartData.datasets[selectedDatasetIndex].data[idx];\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"p-2 border\",\n                    children: year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"p-2 border\",\n                    children: price ? `$${price.toLocaleString()}` : \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 27\n                  }, this)]\n                }, year, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(HDBResaleVisualizer, \"OIau91wNT7RPH//GMNRzt2bG2hM=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = HDBResaleVisualizer;\nvar _c;\n$RefreshReg$(_c, \"HDBResaleVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","Line","axios","useLocation","useParams","Navbar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","API_URL","HDBResaleVisualizer","_s","mode","location","selectedDistricts","selectedRoomType","selectedDistrict","selectedRoomTypes","state","chartData","setChartData","loading","setLoading","error","setError","hasFetched","setHasFetched","selectedDatasetIndex","setSelectedDatasetIndex","length","fetchMultiDistrictData","fetchSingleDistrictData","formatRoomType","name","toUpperCase","replace","queryParams","URLSearchParams","append","get","toString","then","res","formattedRoomTypes","map","processChartData","data","catch","handleError","finally","forEach","town","categories","key","yKey","resale_price","undefined","avg_price","uniqueYears","Set","d","Number","year","sort","datasets","category","filtered","filter","label","match","find","rawData","borderColor","Math","floor","random","tension","fill","labels","err","console","chartOptions","responsive","plugins","legend","position","font","size","weight","onClick","e","legendItem","datasetIndex","title","display","text","sameRoomtpye","scales","x","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","idx","price","toLocaleString","_c","$RefreshReg$"],"sources":["D:/SC2006/SC2006/SC2006_HDBResaleVisualiser/HDBResaleVisualiser_App/sc2006_project/src/pages/HDBResaleVisualiser.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport Navbar from \"../homepage/Navbar\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst API_URL = \"http://127.0.0.1:8000/api/resale/\";\r\n\r\nexport default function HDBResaleVisualizer() {\r\n  const { mode } = useParams();\r\n  const location = useLocation();\r\n  const {\r\n    selectedDistricts = [],\r\n    selectedRoomType = \"\",\r\n    selectedDistrict = \"\",\r\n    selectedRoomTypes = [],\r\n  } = location.state || {};\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [hasFetched, setHasFetched] = useState(false);\r\n  const [selectedDatasetIndex, setSelectedDatasetIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!hasFetched) {\r\n      if (mode === \"multi\" && selectedDistricts.length && selectedRoomType) {\r\n        fetchMultiDistrictData();\r\n      } else if (mode === \"single\" && selectedDistrict && selectedRoomTypes.length) {\r\n        fetchSingleDistrictData();\r\n      }\r\n      setHasFetched(true);\r\n    }\r\n  }, [mode, selectedDistricts, selectedRoomType, selectedDistrict, selectedRoomTypes, hasFetched]);\r\n\r\n  const formatRoomType = (name) => name.toUpperCase().replace(/-/g, \" \");\r\n\r\n  const fetchSingleDistrictData = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const queryParams = new URLSearchParams();\r\n    queryParams.append(\"town\", selectedDistrict);\r\n\r\n    axios\r\n      .get(`${API_URL}resale_roomtype_trends/?${queryParams.toString()}`)\r\n      .then((res) => {\r\n        const formattedRoomTypes = selectedRoomTypes.map(formatRoomType);\r\n        processChartData(res.data, formattedRoomTypes, \"flat_type\");\r\n      })\r\n      .catch(handleError)\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const fetchMultiDistrictData = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const queryParams = new URLSearchParams();\r\n    selectedDistricts.forEach((town) => queryParams.append(\"towns\", town));\r\n    queryParams.append(\"room_type\", selectedRoomType);\r\n    queryParams.append(\"type\", \"price_trends\");\r\n\r\n    axios\r\n      .get(`${API_URL}resale_analysis/?${queryParams.toString()}`)\r\n      .then((res) => processChartData(res.data, selectedDistricts, \"town\"))\r\n      .catch(handleError)\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const processChartData = (data, categories, key) => {\r\n    if (!data.length) {\r\n      setError(\"No data found for the selected criteria.\");\r\n      return;\r\n    }\r\n\r\n    const yKey =\r\n      data[0].resale_price !== undefined\r\n        ? \"resale_price\"\r\n        : data[0].avg_price !== undefined\r\n        ? \"avg_price\"\r\n        : null;\r\n\r\n    if (!yKey) {\r\n      setError(\"Unexpected data format from server.\");\r\n      return;\r\n    }\r\n\r\n    const uniqueYears = [...new Set(data.map((d) => Number(d.year)))].sort();\r\n\r\n    const datasets = categories.map((category) => {\r\n      const filtered = data.filter((d) => d[key].toUpperCase() === category.toUpperCase());\r\n\r\n      return {\r\n        label: category,\r\n        data: uniqueYears.map((year) => {\r\n          const match = filtered.find((d) => Number(d.year) === year);\r\n          return match && match[yKey] ? Number(match[yKey]) : null;\r\n        }),\r\n        rawData: filtered,\r\n        borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n        tension: 0.1,\r\n        fill: false,\r\n      };\r\n    });\r\n\r\n    setChartData({ labels: uniqueYears, datasets });\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(\"Fetch error:\", err);\r\n    setError(\"Failed to load data. Please try again.\");\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n        labels: {\r\n          font: { size: 18, weight: \"bold\" },\r\n        },\r\n        onClick: (e, legendItem, legend) => {\r\n          setSelectedDatasetIndex(legendItem.datasetIndex);\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text:\r\n          mode === \"multi\"\r\n            ? `Compare ${sameRoomtpye} Room Type in Multiple Districts`\r\n            : `Compare Multiple Room Types in ${selectedDistrict}`,\r\n        font: { size: 16 },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: { display: true, text: \"Year\", font: { size: 16 } },\r\n      },\r\n      y: {\r\n        title: { display: true, text: \"Resale Price (SGD)\", font: { size: 16 } },\r\n        beginAtZero: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white text-red-900\">\r\n      <Navbar />\r\n      <h1 className=\"text-3xl font-bold text-center mt-6\">HDB Resale Price Visualizer</h1>\r\n\r\n      <div className=\"w-3/4 mx-auto mt-3 p-4 bg-white rounded-lg shadow\">\r\n        {loading && <p className=\"text-blue-500 mt-4\">Loading...</p>}\r\n        {error && <p className=\"text-red-500 mt-4\">{error}</p>}\r\n\r\n        {chartData && (\r\n          <>\r\n            <Line data={chartData} options={chartOptions} />\r\n            {selectedDatasetIndex !== null && (\r\n              <div className=\"mt-8\">\r\n                <h2 className=\"text-xl font-bold text-center mb-2\">\r\n                  📋 Data for: {chartData.datasets[selectedDatasetIndex].label}\r\n                </h2>\r\n                <table className=\"w-full border text-center border-gray-300 rounded\">\r\n                  <thead className=\"bg-gray-100\">\r\n                    <tr>\r\n                      <th className=\"p-2 border\">Year</th>\r\n                      <th className=\"p-2 border\">Average Resale Price (SGD)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {chartData.labels.map((year, idx) => {\r\n                      const price = chartData.datasets[selectedDatasetIndex].data[idx];\r\n                      return (\r\n                        <tr key={year}>\r\n                          <td className=\"p-2 border\">{year}</td>\r\n                          <td className=\"p-2 border\">{price ? `$${price.toLocaleString()}` : \"N/A\"}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}