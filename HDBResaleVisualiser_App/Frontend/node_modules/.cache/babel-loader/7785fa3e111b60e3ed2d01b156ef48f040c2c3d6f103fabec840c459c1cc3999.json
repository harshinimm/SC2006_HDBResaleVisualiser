{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:8000/api/\";\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// ✅ Automatically add Authorization header if token is available\naxiosInstance.interceptors.request.use(async config => {\n  const token = localStorage.getItem(\"access_token\"); // ✅ Fetch token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["D:/SC2006/sc2006_project (3)/sc2006_project/src/utils/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://127.0.0.1:8000/api/\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\n// ✅ Automatically add Authorization header if token is available\r\naxiosInstance.interceptors.request.use(\r\n    async (config) => {\r\n        const token = localStorage.getItem(\"access_token\");  // ✅ Fetch token from localStorage\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAClC,MAAOC,MAAM,IAAK;EACd,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAE;EACrD,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}