{"ast":null,"code":"var _jsxFileName = \"D:\\\\SC2006\\\\SC2006\\\\SC2006_HDBResaleVisualiser\\\\HDBResaleVisualiser_App\\\\sc2006_project\\\\src\\\\pages\\\\Insights.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Navbar from \"../homepage/Navbar\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst districts = [\"Ang Mo Kio\", \"Bedok\", \"Bishan\", \"Bukit Batok\", \"Bukit Merah\", \"Bukit Panjang\", \"Central Area\", \"Choa Chu Kang\", \"Clementi\", \"Geylang\", \"Hougang\", \"Jurong East\", \"Jurong West\", \"Kallang/Whampoa\", \"Marine Parade\", \"Pasir Ris\", \"Punggol\", \"Queenstown\", \"Sembawang\", \"Sengkang\", \"Serangoon\", \"Tampines\", \"Toa Payoh\", \"Woodlands\", \"Yishun\"];\nconst BASE_URL = \"http://127.0.0.1:8000\";\nconst Insights = () => {\n  _s();\n  var _predictions$price, _predictions, _predictions$year, _predictions2;\n  const [selectedDistrict, setSelectedDistrict] = useState(\"Woodlands\");\n  const [historical, setHistorical] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log(\"🏙️ District changed:\", selectedDistrict); // ✅ Add this\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const townParam = encodeURIComponent(selectedDistrict.toUpperCase());\n        const histRes = await fetch(`${BASE_URL}/api/resale/resale_analysis/?towns=${townParam}&type=price_trends`);\n        const predRes = await fetch(`${BASE_URL}/api/resale/ai_predict/?town=${townParam}&flat_type=${typeParam}`);\n\n        // ✅ Log raw responses before JSON parsing\n        const rawHistText = await histRes.text();\n        const rawPredText = await predRes.text();\n        console.log(\"📄 histRes raw:\", rawHistText.slice(0, 200)); // log first 200 chars\n        console.log(\"📄 predRes raw:\", rawPredText.slice(0, 200));\n        if (!histRes.ok || !predRes.ok) {\n          console.error(\"❌ One of the requests failed:\", histRes.status, predRes.status);\n          throw new Error(\"API failed\");\n        }\n\n        // ✅ Parse after raw logging\n        const histData = JSON.parse(rawHistText);\n        const predData = JSON.parse(rawPredText);\n        console.log(\"✅ Prediction data from API:\", predData);\n        const hist = [];\n        if (Array.isArray(histData)) {\n          const yearGroups = {};\n          histData.forEach(item => {\n            var _ref, _item$resale_price;\n            const year = item.year;\n            const price = (_ref = (_item$resale_price = item.resale_price) !== null && _item$resale_price !== void 0 ? _item$resale_price : item.avg_price) !== null && _ref !== void 0 ? _ref : 0;\n            if (!yearGroups[year]) {\n              yearGroups[year] = {\n                total: 0,\n                count: 0\n              };\n            }\n            yearGroups[year].total += price;\n            yearGroups[year].count += 1;\n          });\n          for (const [year, data] of Object.entries(yearGroups)) {\n            hist.push({\n              year: Number(year),\n              price: Math.round(data.total / data.count)\n            });\n          }\n          hist.sort((a, b) => a.year - b.year); // Ensure chronological order\n        }\n        const future = Array.isArray(predData === null || predData === void 0 ? void 0 : predData.predictions) ? predData.predictions.map(p => ({\n          year: p.year,\n          price: Math.round(p.predicted_price)\n        })) : [];\n        setHistorical(hist);\n        setPredictions(future);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n        setHistorical([]);\n        setPredictions([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedDistrict]);\n  const allData = [...historical, ...predictions];\n  const labels = allData.map(d => d.year);\n  const lastPrediction = (_predictions$price = (_predictions = predictions[predictions.length - 1]) === null || _predictions === void 0 ? void 0 : _predictions.price) !== null && _predictions$price !== void 0 ? _predictions$price : 0;\n  const lineChartData = {\n    labels,\n    datasets: [{\n      label: `Historical Prices in ${selectedDistrict}`,\n      data: historical.map(d => d.price),\n      borderColor: \"#1F77B4\",\n      backgroundColor: \"rgba(31, 119, 180, 0.2)\",\n      borderWidth: 2,\n      pointRadius: 4,\n      pointBackgroundColor: \"#1F77B4\",\n      tension: 0.3\n    }, {\n      label: `Predicted Prices in ${selectedDistrict}`,\n      data: predictions.map(d => d.price),\n      borderColor: \"#D72638\",\n      backgroundColor: \"rgba(215, 38, 56, 0.2)\",\n      borderWidth: 2,\n      pointRadius: 4,\n      pointBackgroundColor: \"#D72638\",\n      borderDash: [6, 4],\n      tension: 0.3\n    }]\n  };\n  const priceDifference = historical.length > 1 ? historical[historical.length - 1].price - historical[0].price : 0;\n  const trendMessage = historical.length > 0 ? priceDifference > 0 ? `📈 Prices in ${selectedDistrict} have increased by $${priceDifference.toLocaleString()} since ${historical[0].year}.` : `📉 Prices in ${selectedDistrict} have decreased by $${Math.abs(priceDifference).toLocaleString()} since ${historical[0].year}.` : `No historical data available for ${selectedDistrict}.`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-red-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-5xl mx-auto mt-12 px-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-extrabold text-center mb-8 text-red-700\",\n        children: \"\\uD83D\\uDCCA AI-Powered Insights & Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-lg font-semibold mr-3\",\n          children: \"Choose a District:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDistrict,\n          onChange: e => setSelectedDistrict(e.target.value),\n          className: \"border px-4 py-2 rounded-lg bg-white shadow-sm\",\n          children: districts.map((district, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: district,\n            children: district\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 shadow-lg rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6 text-red-700\",\n          children: \"\\uD83D\\uDCC9 Resale Price Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-500\",\n            children: \"Loading chart...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Line, {\n            data: lineChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-white p-8 shadow-lg rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-purple-700\",\n          children: \"\\uD83E\\uDD16 AI-Powered Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-800\",\n          children: [\"\\uD83D\\uDCCD \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Estimated \", (_predictions$year = (_predictions2 = predictions[predictions.length - 1]) === null || _predictions2 === void 0 ? void 0 : _predictions2.year) !== null && _predictions$year !== void 0 ? _predictions$year : \"N/A\", \" Resale Price:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 16\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-600 font-bold text-2xl\",\n            children: [\"$\", lastPrediction.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mt-3 text-lg\",\n          children: [\"Based on trends, prices in \", selectedDistrict, \" are projected to rise steadily.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 shadow-lg rounded-lg mt-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-blue-700\",\n          children: \"\\uD83D\\uDCCA Market Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-xl font-semibold ${priceDifference > 0 ? \"text-green-600\" : \"text-red-600\"}`,\n          children: trendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"JGI2/m9KoRVp9kiOWhr7jvq+uno=\");\n_c = Insights;\nexport default Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useEffect","useState","Line","Navbar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","districts","BASE_URL","Insights","_s","_predictions$price","_predictions","_predictions$year","_predictions2","selectedDistrict","setSelectedDistrict","historical","setHistorical","predictions","setPredictions","loading","setLoading","console","log","fetchData","townParam","encodeURIComponent","toUpperCase","histRes","fetch","predRes","typeParam","rawHistText","text","rawPredText","slice","ok","error","status","Error","histData","JSON","parse","predData","hist","Array","isArray","yearGroups","forEach","item","_ref","_item$resale_price","year","price","resale_price","avg_price","total","count","data","Object","entries","push","Number","Math","round","sort","a","b","future","map","p","predicted_price","allData","labels","d","lastPrediction","length","lineChartData","datasets","label","borderColor","backgroundColor","borderWidth","pointRadius","pointBackgroundColor","tension","borderDash","priceDifference","trendMessage","toLocaleString","abs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","district","index","_c","$RefreshReg$"],"sources":["D:/SC2006/SC2006/SC2006_HDBResaleVisualiser/HDBResaleVisualiser_App/sc2006_project/src/pages/Insights.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Navbar from \"../homepage/Navbar\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst districts = [\r\n  \"Ang Mo Kio\", \"Bedok\", \"Bishan\", \"Bukit Batok\", \"Bukit Merah\", \"Bukit Panjang\", \"Central Area\", \"Choa Chu Kang\", \"Clementi\", \"Geylang\", \"Hougang\",\r\n  \"Jurong East\", \"Jurong West\", \"Kallang/Whampoa\", \"Marine Parade\", \"Pasir Ris\",\r\n  \"Punggol\", \"Queenstown\", \"Sembawang\", \"Sengkang\", \"Serangoon\", \"Tampines\",\r\n  \"Toa Payoh\", \"Woodlands\", \"Yishun\"\r\n];\r\n\r\nconst BASE_URL = \"http://127.0.0.1:8000\";\r\n\r\nconst Insights = () => {\r\n  const [selectedDistrict, setSelectedDistrict] = useState(\"Woodlands\");\r\n  const [historical, setHistorical] = useState([]);\r\n  const [predictions, setPredictions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"🏙️ District changed:\", selectedDistrict); // ✅ Add this\r\n    setLoading(true);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const townParam = encodeURIComponent(selectedDistrict.toUpperCase());\r\n        \r\n            const histRes = await fetch(`${BASE_URL}/api/resale/resale_analysis/?towns=${townParam}&type=price_trends`);\r\n            const predRes = await fetch(`${BASE_URL}/api/resale/ai_predict/?town=${townParam}&flat_type=${typeParam}`);\r\n\r\n        \r\n            // ✅ Log raw responses before JSON parsing\r\n            const rawHistText = await histRes.text();\r\n            const rawPredText = await predRes.text();\r\n        \r\n            console.log(\"📄 histRes raw:\", rawHistText.slice(0, 200));  // log first 200 chars\r\n            console.log(\"📄 predRes raw:\", rawPredText.slice(0, 200));\r\n        \r\n            if (!histRes.ok || !predRes.ok) {\r\n              console.error(\"❌ One of the requests failed:\", histRes.status, predRes.status);\r\n              throw new Error(\"API failed\");\r\n            }\r\n        \r\n            // ✅ Parse after raw logging\r\n            const histData = JSON.parse(rawHistText);\r\n            const predData = JSON.parse(rawPredText);\r\n      \r\n          console.log(\"✅ Prediction data from API:\", predData);\r\n\r\n        const hist = [];\r\n\r\n        if (Array.isArray(histData)) {\r\n          const yearGroups = {};\r\n\r\n          histData.forEach(item => {\r\n            const year = item.year;\r\n            const price = item.resale_price ?? item.avg_price ?? 0;\r\n\r\n            if (!yearGroups[year]) {\r\n              yearGroups[year] = { total: 0, count: 0 };\r\n            }\r\n\r\n            yearGroups[year].total += price;\r\n            yearGroups[year].count += 1;\r\n          });\r\n\r\n          for (const [year, data] of Object.entries(yearGroups)) {\r\n            hist.push({\r\n              year: Number(year),\r\n              price: Math.round(data.total / data.count),\r\n            });\r\n          }\r\n\r\n          hist.sort((a, b) => a.year - b.year); // Ensure chronological order\r\n        }\r\n\r\n        const future = Array.isArray(predData?.predictions)\r\n          ? predData.predictions.map(p => ({\r\n              year: p.year,\r\n              price: Math.round(p.predicted_price),\r\n            }))\r\n          : [];\r\n\r\n        setHistorical(hist);\r\n        setPredictions(future);\r\n      } catch (error) {\r\n        console.error(\"Fetch error:\", error);\r\n        setHistorical([]);\r\n        setPredictions([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedDistrict]);\r\n\r\n  const allData = [...historical, ...predictions];\r\n  const labels = allData.map((d) => d.year);\r\n  const lastPrediction = predictions[predictions.length - 1]?.price ?? 0;\r\n\r\n  const lineChartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: `Historical Prices in ${selectedDistrict}`,\r\n        data: historical.map(d => d.price),\r\n        borderColor: \"#1F77B4\",\r\n        backgroundColor: \"rgba(31, 119, 180, 0.2)\",\r\n        borderWidth: 2,\r\n        pointRadius: 4,\r\n        pointBackgroundColor: \"#1F77B4\",\r\n        tension: 0.3,\r\n      },\r\n      {\r\n        label: `Predicted Prices in ${selectedDistrict}`,\r\n        data: predictions.map(d => d.price),\r\n        borderColor: \"#D72638\",\r\n        backgroundColor: \"rgba(215, 38, 56, 0.2)\",\r\n        borderWidth: 2,\r\n        pointRadius: 4,\r\n        pointBackgroundColor: \"#D72638\",\r\n        borderDash: [6, 4],\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const priceDifference = historical.length > 1\r\n    ? historical[historical.length - 1].price - historical[0].price\r\n    : 0;\r\n\r\n  const trendMessage = historical.length > 0\r\n    ? (priceDifference > 0\r\n      ? `📈 Prices in ${selectedDistrict} have increased by $${priceDifference.toLocaleString()} since ${historical[0].year}.`\r\n      : `📉 Prices in ${selectedDistrict} have decreased by $${Math.abs(priceDifference).toLocaleString()} since ${historical[0].year}.`)\r\n    : `No historical data available for ${selectedDistrict}.`;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-red-900\">\r\n      <Navbar />\r\n      <div className=\"max-w-5xl mx-auto mt-12 px-6\">\r\n        <h1 className=\"text-5xl font-extrabold text-center mb-8 text-red-700\">\r\n          📊 AI-Powered Insights & Trends\r\n        </h1>\r\n\r\n        {/* District Dropdown */}\r\n        <div className=\"mb-6\">\r\n          <label className=\"text-lg font-semibold mr-3\">Choose a District:</label>\r\n          <select\r\n            value={selectedDistrict}\r\n            onChange={(e) => setSelectedDistrict(e.target.value)}\r\n            className=\"border px-4 py-2 rounded-lg bg-white shadow-sm\"\r\n          >\r\n            {districts.map((district, index) => (\r\n              <option key={index} value={district}>\r\n                {district}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Line Chart */}\r\n        <div className=\"bg-white p-8 shadow-lg rounded-lg\">\r\n          <h2 className=\"text-2xl font-bold mb-6 text-red-700\">📉 Resale Price Trend</h2>\r\n          <div className=\"h-80\">\r\n            {loading ? (\r\n              <p className=\"text-center text-gray-500\">Loading chart...</p>\r\n            ) : (\r\n              <Line data={lineChartData} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* AI Prediction */}\r\n        <div className=\"mt-8 bg-white p-8 shadow-lg rounded-lg\">\r\n          <h2 className=\"text-2xl font-bold mb-4 text-purple-700\">🤖 AI-Powered Prediction</h2>\r\n          <p className=\"text-lg text-gray-800\">\r\n            📍 <strong>Estimated {predictions[predictions.length - 1]?.year ?? \"N/A\"} Resale Price:</strong>&nbsp;\r\n            <span className=\"text-green-600 font-bold text-2xl\">\r\n              ${lastPrediction.toLocaleString()}\r\n            </span>\r\n          </p>\r\n          <p className=\"text-gray-700 mt-3 text-lg\">\r\n            Based on trends, prices in {selectedDistrict} are projected to rise steadily.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Market Trend */}\r\n        <div className=\"bg-white p-8 shadow-lg rounded-lg mt-8 text-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4 text-blue-700\">📊 Market Trend</h2>\r\n          <p className={`text-xl font-semibold ${priceDifference > 0 ? \"text-green-600\" : \"text-red-600\"}`}>\r\n            {trendMessage}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}